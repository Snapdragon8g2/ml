
mkdir HelloGradleGroovy
cd HelloGradleGroovy
gradle init --type java-application --dsl groovy --overwrite
tree
gedit app/build.gradle
plugins {
    id 'java'
    id 'application'
}

group = 'org.example'
version = '1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
}

application {
    mainClass = 'org.example.App'
}

task hello {
    doLast {
        println 'Hello, Gradle!'
    }
}
gradle build
gradle run
gradle hello


cd ~
mkdir HelloGradleKotlin
cd HelloGradleKotlin
gradle init --type java-application --dsl kotlin --overwrite

tree
gedit app/build.gradle.kts

plugins {
    java
    application
}

group = "org.example"
version = "1.0"

repositories {
    mavenCentral() 
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.10.0")
}

application {
    mainClass.set("org.example.App") // Specifies the main class
}

tasks.register("hello") {
    doLast {
        println("Hello, Gradle with Kotlin DSL!")
    }
}

gradle build
gradle run
gradle hello
